# Copyright 2020 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: scraper
  namespace: knative-serving
  labels:
    knative.dev/release: devel
    knative.dev/scraper: devel
spec:
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 50%
  selector:
    matchLabels:
      app: scraper
      role: scraper
  template:
    metadata:
      labels:
        app: scraper
        role: scraper
        knative.dev/release: devel
        knative.dev/scraper: devel
    spec:
      serviceAccountName: controller
      containers:
      - name: scraper
        # This is the Go import path for the binary that is containerized
        # and substituted here.
        image: knative.dev/serving/cmd/scraper

        resources:
          requests:
            cpu: 300m
            memory: 60Mi
          limits:
            cpu: 500m
            memory: 200Mi
        env:
        # Run Activator with GC collection when newly generated memory is 500%.
        - name: GOGC
          value: "500"
        - name: SCRAPER_PORT
          value: "8101"
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CONFIG_LOGGING_NAME
          value: config-logging

        securityContext:
          allowPrivilegeEscalation: false

        ports:
        - name: scraper
          containerPort: 8101

        readinessProbe: &probe
          httpGet:
            port: 8101
            httpHeaders:
            - name: k-kubelet-probe
              value: "scraper"
        livenessProbe: *probe
      # The activator (often) sits on the dataplane, and may proxy long (e.g.
      # streaming, websockets) requests.  We give a long grace period for the
      # activator to "lame duck" and drain outstanding requests before we
      # forcibly terminate the pod (and outstanding connections).  This value
      # should be at least as large as the upper bound on the Revision's
      # timeoutSeconds property to avoid servicing events disrupting
      # connections.
      terminationGracePeriodSeconds: 300
